{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sviluppo\\\\react\\\\exobank\\\\src\\\\components\\\\OperazioniUtente.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ERRORE, INDEX_UTENTE } from \"../utility/Route\";\nimport { findContoUtente, insertTransazione } from \"../service/utenteService\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { listaConti, listaTipoTransazione } from \"../service/adminService\";\nimport { setConto } from \"../store/slice/contoSlice\";\nimport { BOLLETTINO, BONIFICO, DEPOSITO, Operazione, PRELIEVO, RICARICA, datiConto, errorBanner, returnOperazione } from \"../utility/Funzioni\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function OperazioniUtente({\n  setErrore\n}) {\n  _s();\n  const conto = useSelector(state => state.conto);\n  const utente = useSelector(state => state.utente);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [tipoOperazione, setTipoOperazione] = useState();\n  const [conti, setConti] = useState();\n  const [listaOperazioni, setListaOperazioni] = useState();\n  const [visibile, setVisibile] = useState(false);\n  const [visibile2, setVisibile2] = useState(false);\n  const [messaggio, setMessaggio] = useState(\"\");\n  const [aggiornamento, setAggiornamento] = useState(false);\n  const [importo, setImporto] = useState();\n  const [ibanBeneficiario, setIbanBeneficiario] = useState();\n\n  /*\r\n   QUESTE SI POSSONO SPOSTARE TUTTE\r\n       messaggio,\r\n       setMessaggio,\r\n       setImporto,\r\n       visibile,\r\n       visibile2,\r\n       setVisibile,\r\n       setVisibile2,\r\n       setIbanBeneficiario,\r\n       importo,\r\n       ibanBeneficiario,\r\n     */\n\n  useEffect(() => {\n    if (utente.ruolo) {\n      if (utente.ruolo.id == 2) {} else {\n        const errore = {\n          titoloErrore: \"ACCESSO NON AUTORIZZATO\",\n          descrizioneErrore: \"Non hai i permessi per visualizzare la pagina\"\n        };\n        setErrore(errore);\n        history.push(ERRORE);\n      }\n    } else {\n      const errore = {\n        titoloErrore: \"UTENTE NON RICONOSCIUTO\",\n        descrizioneErrore: \"Effettua il login\"\n      };\n      setErrore(errore);\n      history.push(ERRORE);\n    }\n    listaConti(setConti, conto);\n    listaTipoTransazione(setListaOperazioni);\n    if (conto.stato) {\n      if (conto.stato.id == 2 || conto.stato.id == 3) {\n        const errore = {\n          titoloErrore: \"CONTO CHIUSO O DISABILITATO\",\n          descrizioneErrore: \"Siamo spiacenti ma non puoi effetturare operazioni su questo conto\"\n        };\n        setErrore(errore);\n        history.push(ERRORE);\n      }\n    }\n    findContoUtente(utente, setVisibile, setMessaggio, setConto, dispatch);\n  }, [aggiornamento]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"DATI CONTO:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: datiConto(conto)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Effettua un operazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          style: {\n            marginTop: 10,\n            margin: 5\n          },\n          onChange: e => setTipoOperazione(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleziona un operazione\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), listaOperazioni ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: listaOperazioni.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: o.id,\n              children: o.tipoTransazione\n            }, o.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), returnOperazione(tipoOperazione, messaggio, setMessaggio, setImporto, visibile, visibile2, setVisibile, setVisibile2, setIbanBeneficiario, conti, importo, ibanBeneficiario, conto)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(OperazioniUtente, \"O5TqFBo2biVSKuw4NOTXLly8nKk=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n_c = OperazioniUtente;\nvar _c;\n$RefreshReg$(_c, \"OperazioniUtente\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","ERRORE","INDEX_UTENTE","findContoUtente","insertTransazione","useHistory","listaConti","listaTipoTransazione","setConto","BOLLETTINO","BONIFICO","DEPOSITO","Operazione","PRELIEVO","RICARICA","datiConto","errorBanner","returnOperazione","jsxDEV","_jsxDEV","Fragment","_Fragment","OperazioniUtente","setErrore","_s","conto","state","utente","dispatch","history","tipoOperazione","setTipoOperazione","conti","setConti","listaOperazioni","setListaOperazioni","visibile","setVisibile","visibile2","setVisibile2","messaggio","setMessaggio","aggiornamento","setAggiornamento","importo","setImporto","ibanBeneficiario","setIbanBeneficiario","ruolo","id","errore","titoloErrore","descrizioneErrore","push","stato","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","margin","onChange","e","target","value","map","o","tipoTransazione","_c","$RefreshReg$"],"sources":["C:/Sviluppo/react/exobank/src/components/OperazioniUtente.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ERRORE, INDEX_UTENTE } from \"../utility/Route\";\r\nimport { findContoUtente, insertTransazione } from \"../service/utenteService\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { listaConti, listaTipoTransazione } from \"../service/adminService\";\r\nimport { setConto } from \"../store/slice/contoSlice\";\r\nimport { BOLLETTINO, BONIFICO, DEPOSITO, Operazione, PRELIEVO, RICARICA, datiConto, errorBanner, returnOperazione } from \"../utility/Funzioni\";\r\n\r\n\r\n\r\nexport default function OperazioniUtente({ setErrore }) {\r\n\r\n\r\n    \r\n    const conto = useSelector(state => state.conto);\r\n    const utente = useSelector(state => state.utente);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [tipoOperazione, setTipoOperazione] = useState();\r\n    const [conti, setConti] = useState();\r\n    const [listaOperazioni, setListaOperazioni] = useState();\r\n    const [visibile, setVisibile] = useState(false)\r\n    const [visibile2, setVisibile2] = useState(false)\r\n    const [messaggio, setMessaggio] = useState(\"\")\r\n    const [aggiornamento, setAggiornamento] = useState(false)\r\n    const [importo, setImporto] = useState();\r\n    const [ibanBeneficiario, setIbanBeneficiario] = useState();\r\n\r\n\r\n\r\n   /*\r\n    QUESTE SI POSSONO SPOSTARE TUTTE\r\n        messaggio,\r\n        setMessaggio,\r\n        setImporto,\r\n        visibile,\r\n        visibile2,\r\n        setVisibile,\r\n        setVisibile2,\r\n        setIbanBeneficiario,\r\n        importo,\r\n        ibanBeneficiario,\r\n      */  \r\n\r\n    useEffect(() => {\r\n\r\n        if (utente.ruolo) {\r\n            if (utente.ruolo.id == 2) {\r\n\r\n            } else {\r\n                const errore = {\r\n                    titoloErrore: \"ACCESSO NON AUTORIZZATO\",\r\n                    descrizioneErrore: \"Non hai i permessi per visualizzare la pagina\"\r\n                }\r\n                setErrore(errore);\r\n                history.push(ERRORE)\r\n            }\r\n        } else {\r\n            const errore = {\r\n                titoloErrore: \"UTENTE NON RICONOSCIUTO\",\r\n                descrizioneErrore: \"Effettua il login\"\r\n            }\r\n            setErrore(errore);\r\n            history.push(ERRORE)\r\n        }\r\n        listaConti(setConti,conto);\r\n\r\n        listaTipoTransazione(setListaOperazioni);\r\n\r\n\r\n\r\n        if (conto.stato) {\r\n            if (conto.stato.id == 2 || conto.stato.id == 3) {\r\n                const errore = {\r\n                    titoloErrore: \"CONTO CHIUSO O DISABILITATO\",\r\n                    descrizioneErrore: \"Siamo spiacenti ma non puoi effetturare operazioni su questo conto\"\r\n\r\n                }\r\n                setErrore(errore);\r\n                history.push(ERRORE)\r\n            }\r\n        }\r\n        findContoUtente(utente,setVisibile,setMessaggio,setConto,dispatch);\r\n\r\n    }, [aggiornamento])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"div\">\r\n                <div className=\"div-container\">\r\n                    <h3><b>DATI CONTO:</b></h3>\r\n                    <br />\r\n                    <p><b>{datiConto(conto)}</b></p>\r\n                    <p><b>Effettua un operazione</b></p>\r\n                    <select\r\n                        style={{ marginTop: 10, margin: 5 }}\r\n                        onChange={(e) => setTipoOperazione(e.target.value)}\r\n                    >\r\n                        <option value=\"\" >Seleziona un operazione</option>\r\n                        {listaOperazioni ? (\r\n                            <>\r\n                                {listaOperazioni.map((o) => (\r\n                                    <option key={o.id} value={o.id}>\r\n                                        {o.tipoTransazione}\r\n                                    </option>\r\n                                ))}\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                            </>\r\n                        )}\r\n                    </select>\r\n                    {returnOperazione(tipoOperazione,\r\n                                        messaggio,\r\n                                        setMessaggio,\r\n                                        setImporto,\r\n                                        visibile,\r\n                                        visibile2,\r\n                                        setVisibile,\r\n                                        setVisibile2,\r\n                                        setIbanBeneficiario,\r\n                                        conti,\r\n                                        importo,\r\n                                        ibanBeneficiario,\r\n                                        conto  \r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}