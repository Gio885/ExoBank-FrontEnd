{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sviluppo\\\\react\\\\exobank\\\\src\\\\utility\\\\Funzioni.js\";\nimport { insertTransazione } from \"../service/utenteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DEPOSITO = \"1\";\nexport const PRELIEVO = \"2\";\nexport const BONIFICO = \"3\";\nexport const RICARICA = \"4\";\nexport const BOLLETTINO = \"5\";\nconst [visibile, setVisibile] = useState(false);\nconst [visibile2, setVisibile2] = useState(false);\nexport function Operazione(tipoOperazione, conto, conti, importo, setImporto, ibanBeneficiario, setIbanBeneficiario) {\n  const contoAggiornato = {\n    ...conto\n  };\n  const tipoDeposito = {\n    id: 1\n  };\n  const tipoPrelievo = {\n    id: 2\n  };\n  const tipoBonifico = {\n    id: 3\n  };\n  const tipoRicarica = {\n    id: 4\n  };\n  const tipoBollettino = {\n    id: 5\n  };\n  let tipo;\n  let statoTransazione;\n  let contoBeneficiario = null;\n  let contoBeneficiarioEsterno = null;\n  switch (tipoOperazione) {\n    case DEPOSITO:\n      tipo = tipoDeposito;\n      statoTransazione = {\n        id: 1\n      };\n      break;\n    case PRELIEVO:\n      tipo = tipoPrelievo;\n      statoTransazione = {\n        id: 3\n      };\n      break;\n    case BONIFICO:\n      tipo = tipoBonifico;\n      statoTransazione = {\n        id: 3\n      };\n      contoBeneficiario = conti.find(conti => conti.numeroConto === ibanBeneficiario);\n      break;\n    case RICARICA:\n      tipo = tipoRicarica;\n      statoTransazione = {\n        id: 3\n      };\n      break;\n    case BOLLETTINO:\n      tipo = tipoBollettino;\n      statoTransazione = {\n        id: 3\n      };\n      contoBeneficiarioEsterno = ibanBeneficiario;\n      break;\n    default:\n      setMessaggio(\"Tipo di operazione non valido\");\n      setVisibile(true);\n      return;\n  }\n  if (importo <= 0) {\n    setMessaggio(\"Inserisci un importo positivo\");\n  } else if (importo >= 1000) {\n    setMessaggio(\"Non è possibile effettuare un'operazione superiore a € 1000.00\");\n  } else if (tipo === tipoBonifico && (!ibanBeneficiario || ibanBeneficiario.length !== 27)) {\n    setMessaggio(\"L'IBAN inserito non è valido\");\n  } else if (tipo === tipoBonifico && !contoBeneficiario) {\n    setMessaggio(\"Operazione non consentita, inserisci un IBAN valido\");\n  } else if (importo > conto.saldo) {\n    setMessaggio(\"Operazione non consentita, importo superiore al saldo\");\n  } else {\n    const transazione = {\n      conto: {\n        ...conto\n      },\n      importo: importo,\n      tipo: tipo,\n      statoTransazione: statoTransazione,\n      contoBeneficiario: contoBeneficiario,\n      contoBeneficiarioEsterno: contoBeneficiarioEsterno\n    };\n    insertTransazione(transazione).then(response => {\n      if (response.data) {\n        setMessaggio(`La tua richiesta di ${tipoOperazione} è stata presa in carico`);\n        setVisibile2(true);\n        setIbanBeneficiario(\"\");\n        setImporto(\"\");\n      }\n    }).catch(error => {\n      if (error.response && error.response.data) {\n        setMessaggio(error.response.data);\n      } else {\n        setMessaggio(\"Errore sconosciuto\");\n      }\n      setVisibile(true);\n      setIbanBeneficiario(\"\");\n      setImporto(\"\");\n    });\n  }\n}\n_c = Operazione;\nfunction errorBanner(messaggio) {\n  if (visibile) {\n    setTimeout(() => {\n      setImporto(\"\");\n      setVisibile(false);\n      setMessaggio(\"\");\n    }, 5000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"error-banner\",\n      children: messaggio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  } else if (visibile2) {\n    setTimeout(() => {\n      setImporto(\"\");\n      setVisibile2(false);\n      setMessaggio(\"\");\n    }, 5000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      className: \"error-banner\",\n      children: messaggio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\nexport function datiConto(conto) {\n  if (!conto) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Non hai un conto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Numero conto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), \" \", conto.numeroConto]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Stato conto:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), \" \", conto.stato ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: conto.stato.statoContoCorrente\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: -10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Saldo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), \" \\u20AC \", conto.saldo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: conto.saldo.toFixed(2)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"Operazione\");","map":{"version":3,"names":["insertTransazione","jsxDEV","_jsxDEV","Fragment","_Fragment","DEPOSITO","PRELIEVO","BONIFICO","RICARICA","BOLLETTINO","visibile","setVisibile","useState","visibile2","setVisibile2","Operazione","tipoOperazione","conto","conti","importo","setImporto","ibanBeneficiario","setIbanBeneficiario","contoAggiornato","tipoDeposito","id","tipoPrelievo","tipoBonifico","tipoRicarica","tipoBollettino","tipo","statoTransazione","contoBeneficiario","contoBeneficiarioEsterno","find","numeroConto","setMessaggio","length","saldo","transazione","then","response","data","catch","error","_c","errorBanner","messaggio","setTimeout","style","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","datiConto","marginBottom","stato","statoContoCorrente","toFixed","$RefreshReg$"],"sources":["C:/Sviluppo/react/exobank/src/utility/Funzioni.js"],"sourcesContent":["import { insertTransazione } from \"../service/utenteService\";\r\n\r\nexport const DEPOSITO = \"1\";\r\nexport const PRELIEVO = \"2\"\r\nexport const  BONIFICO = \"3\"\r\nexport const  RICARICA = \"4\"\r\nexport const  BOLLETTINO = \"5\"\r\n\r\n\r\nconst [visibile, setVisibile] = useState(false)\r\nconst [visibile2, setVisibile2] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Operazione(tipoOperazione, conto, conti, importo, setImporto, ibanBeneficiario, setIbanBeneficiario) {\r\n    const contoAggiornato = { ...conto };\r\n    const tipoDeposito = { id: 1 };\r\n    const tipoPrelievo = { id: 2 };\r\n    const tipoBonifico = { id: 3 };\r\n    const tipoRicarica = { id: 4 };\r\n    const tipoBollettino = { id: 5 };\r\n    let tipo;\r\n    let statoTransazione;\r\n    let contoBeneficiario = null;\r\n    let contoBeneficiarioEsterno = null;\r\n\r\n    switch (tipoOperazione) {\r\n        case DEPOSITO:\r\n            tipo = tipoDeposito;\r\n            statoTransazione = { id: 1 };\r\n            break;\r\n        case PRELIEVO:\r\n            tipo = tipoPrelievo;\r\n            statoTransazione = { id: 3 };\r\n            break;\r\n        case BONIFICO:\r\n            tipo = tipoBonifico;\r\n            statoTransazione = { id: 3 };\r\n            contoBeneficiario = conti.find((conti) => conti.numeroConto === ibanBeneficiario);\r\n            break;\r\n        case RICARICA:\r\n            tipo = tipoRicarica;\r\n            statoTransazione = { id: 3 };\r\n            break;\r\n        case BOLLETTINO:\r\n            tipo = tipoBollettino;\r\n            statoTransazione = { id: 3 };\r\n            contoBeneficiarioEsterno = ibanBeneficiario;\r\n            break;\r\n        default:\r\n            setMessaggio(\"Tipo di operazione non valido\");\r\n            setVisibile(true);\r\n            return;\r\n    }\r\n\r\n    if (importo <= 0) {\r\n        setMessaggio(\"Inserisci un importo positivo\");\r\n    } else if (importo >= 1000) {\r\n        setMessaggio(\"Non è possibile effettuare un'operazione superiore a € 1000.00\");\r\n    } else if (tipo === tipoBonifico && (!ibanBeneficiario || ibanBeneficiario.length !== 27)) {\r\n        setMessaggio(\"L'IBAN inserito non è valido\");\r\n    } else if (tipo === tipoBonifico && !contoBeneficiario) {\r\n        setMessaggio(\"Operazione non consentita, inserisci un IBAN valido\");\r\n    } else if (importo > conto.saldo) {\r\n        setMessaggio(\"Operazione non consentita, importo superiore al saldo\");\r\n    } else {\r\n        const transazione = {\r\n            conto: { ...conto },\r\n            importo: importo,\r\n            tipo: tipo,\r\n            statoTransazione: statoTransazione,\r\n            contoBeneficiario: contoBeneficiario,\r\n            contoBeneficiarioEsterno: contoBeneficiarioEsterno,\r\n        };\r\n        insertTransazione(transazione)\r\n            .then((response) => {\r\n                if (response.data) {\r\n                    setMessaggio(`La tua richiesta di ${tipoOperazione} è stata presa in carico`);\r\n                    setVisibile2(true);\r\n                    setIbanBeneficiario(\"\");\r\n                    setImporto(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (error.response && error.response.data) {\r\n                    setMessaggio(error.response.data);\r\n                } else {\r\n                    setMessaggio(\"Errore sconosciuto\");\r\n                }\r\n                setVisibile(true);\r\n                setIbanBeneficiario(\"\");\r\n                setImporto(\"\");\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction errorBanner(messaggio) {\r\n    if (visibile) {\r\n        setTimeout(() => {\r\n            setImporto(\"\")\r\n            setVisibile(false);\r\n            setMessaggio(\"\");\r\n        }, 5000);\r\n        return (\r\n            <div style={{ color: \"red\" }} className=\"error-banner\">\r\n                {messaggio}\r\n            </div>\r\n        );\r\n    } else if (visibile2) {\r\n        setTimeout(() => {\r\n            setImporto(\"\")\r\n            setVisibile2(false);\r\n            setMessaggio(\"\");\r\n        }, 5000);\r\n        return (\r\n            <div style={{ color: \"green\" }} className=\"error-banner\">\r\n                {messaggio}\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport function datiConto(conto) {\r\n    if (!conto) {\r\n        return <p>Non hai un conto</p>;\r\n    } else {\r\n        return (\r\n            <>\r\n                <p style={{ marginBottom: 0 }}>\r\n                    <b>Numero conto:</b> {conto.numeroConto}\r\n                </p>\r\n                <p style={{ marginBottom: 0 }}>\r\n                    <b>Stato conto:</b> {(conto.stato) ? <>{conto.stato.statoContoCorrente}</> : <></>}\r\n                </p>\r\n                <p style={{ marginBottom: -10 }}>\r\n                    <b>Saldo:</b> € {(conto.saldo) ? <>{conto.saldo.toFixed(2)}</> : <></>}\r\n                </p>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}